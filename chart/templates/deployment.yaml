{{- if .Values.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ssh-service.fullname" . }}
  labels:
    {{- include "ssh-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ssh-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ssh-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/secret-hostkeys: {{ include (print $.Template.BasePath "/secret-hostkeys.yaml") . | sha256sum }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: "{{ $value }}"
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: sshdconfig
        configMap:
          defaultMode: 0644
          name: {{ include "ssh-service.fullname" . }}
      - name: userconfig
        configMap:
          defaultMode: 0644
          name: {{ include "ssh-service.fullname" . }}
      - name: tcpwrappers
        configMap:
          defaultMode: 0644
          name: {{ include "ssh-service.fullname" . }}
      - name: motd
        configMap:
          defaultMode: 0644
          name: {{ include "ssh-service.fullname" . }}
      - name: passwd
        secret:
          defaultMode: 0644
          secretName: {{ include "ssh-service.fullname" . }}
      - name: shadow
        secret:
          defaultMode: 0644
          secretName: {{ include "ssh-service.fullname" . }}
      {{- range $idx, $map := $.Values.sshHostKeys }}
      {{ if and $map.content (ne $map.content "") }}
      - name: "{{ $map.name | replace "_" "-" }}"
        secret:
          defaultMode: 0600
          secretName: ssh-service-hostkeys
      {{- end }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:  ["/usr/sbin/sshd", "-De"]
        env:
        {{- range $key, $value := .Values.extraEnv }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{- end }}
        ports:
        - name: ssh
          containerPort: 22
          protocol: TCP
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          failureTreshold: {{ .Values.livenessProbe.failureTreshold }}
          tcpSocket:
            port: ssh
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          tcpSocket:
            port: ssh
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/ssh/sshd_config
          name: sshdconfig
          subPath: sshd_config
        - mountPath: /usr/local/etc/user-config.json
          name: userconfig
          subPath: user_config
        - mountPath: /etc/hosts.allow
          name: tcpwrappers
          subPath: tcp_wrappers
        - mountPath: /etc/motd
          name: motd
          subPath: motd
        - mountPath: /var/lib/extrausers/passwd
          name: passwd
          subPath: passwd
        - mountPath: /var/lib/extrausers/shadow
          name: passwd
          subPath: shadow
        {{- range $key := .Values.sshHostKeys }}
        {{- if and $key.content (ne $key.content "") }}
        - mountPath: /etc/ssh/{{ $key.name }}
          subPath: {{ $key.name }}
          name: {{ $key.name | replace "_" "-" }}
          readOnly: true
        {{- end }}
        {{- end }}
{{- end -}}
